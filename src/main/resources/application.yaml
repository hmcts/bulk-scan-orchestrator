server:
  port: 8582

management:
  endpoints:
    web:
      exposure:
        include: '*'
      base-path: /
  endpoint:
    health:
      show-details: always

# liveness alert settings depend on application name, if it is changed alert configuration must also be adjusted
# https://github.com/hmcts/bulk-scan-shared-infrastructure/blob/master/liveness-alert.tf
spring:
  application:
    name: Bulk Scan Orchestrator
  config:
    import: "optional:configtree:/mnt/secrets/bulk-scan/"
  datasource:
    url: jdbc:postgresql://${DB_HOST}:${DB_PORT}/${DB_NAME}${DB_CONN_OPTIONS}
    username: ${DB_USER}
    password: ${DB_PASSWORD}
    properties:
      charSet: UTF-8
    hikari:
      minimumIdle: 2
      maximumPoolSize: 25
      idleTimeout: 10000
      poolName: OrchestratorHikariCP
      maxLifetime: 7200000
      connectionTimeout: 30000
  autoconfigure:
    exclude: org.springframework.boot.autoconfigure.jms.JmsAutoConfiguration,org.springframework.boot.autoconfigure.jms.activemq.ActiveMQAutoConfiguration
  main:
    allow-bean-definition-overriding: true

flyway:
  skip-migrations: ${FLYWAY_SKIP_MIGRATIONS}

azure:
  servicebus:
    namespace: ${QUEUE_NAMESPACE}
    envelopes:
      access-key: ${ENVELOPES_QUEUE_READ_ACCESS_KEY}
      access-key-name: ${QUEUE_ACCESS_KEY_LISTEN_NAME}
      queue-name: ${ENVELOPES_QUEUE_NAME}
      max-delivery-count: ${ENVELOPES_QUEUE_MAX_DELIVERY_COUNT}
    processed-envelopes:
      access-key: ${PROCESSED_ENVELOPES_QUEUE_WRITE_ACCESS_KEY}
      access-key-name: ${QUEUE_ACCESS_KEY_SEND_NAME}
      queue-name: ${PROCESSED_ENVELOPES_QUEUE_NAME}
    payments:
      access-key: ${PAYMENTS_QUEUE_WRITE_ACCESS_KEY}
      access-key-name: ${QUEUE_ACCESS_KEY_SEND_NAME}
      queue-name: ${PAYMENTS_QUEUE_NAME}
      manual-retry-count: 3
      manual-retry-wait-in-ms: 2000

core_case_data:
  api:
    url: 'http://localhost:4452'

document_management:
  url: ${DOCUMENT_MANAGEMENT_URL:http://localhost:4460}
  context-path: documents

case_document_am:
  url: ${CDAM_URL:http://localhost:4455}

idam:
  s2s-auth:
    url:    ${S2S_URL:http://localhost:4552}
    secret: ${S2S_SECRET:AAAAAAAAAAAAAAAA}
    name:   ${S2S_NAME:bulk_scan_orchestrator}
  api:
    url: http://localhost:8080
  client:
    id: 'bsp'
    secret: ${IDAM_CLIENT_SECRET:123456}
    redirect_uri: http://localhost/receiver
    cache:
      refresh-before-expire-in-sec: 300
  users:
    bulkscan:
      username: ${IDAM_USERS_BULKSCAN_USERNAME:bulkscan+ccd@gmail.com}
      password: ${IDAM_USERS_BULKSCAN_PASSWORD:Password12}

service-config:
  # Services and all their case type IDs, excluding exception records.
  # These mappings are used by Bulk Scan to determine which case type IDs to search across
  # when looking for a service case (by its legacy ID, ID of related exception record, etc).
  # Those CTIDs that are not present here, will not be included in the search.
  # If case type ID list is empty, no case can be found for the service, except when sought for by CCD ID.
  services:
    - service: bulkscan # service name corresponds to the name of the container in Blob Storage
      jurisdiction: BULKSCAN
      transformation-url: ${TRANSFORMATION_URL_BULKSCAN}
      update-url: ${UPDATE_URL_BULKSCAN}
      case-type-ids:
        - Bulk_Scanned
      allow-creating-case-before-payments-are-processed: true
      allow-attaching-to-case-before-payments-are-processed-for-classifications:
        - SUPPLEMENTARY_EVIDENCE
      form-type-to-surname-ocr-field-mappings:
        - formType: PERSONAL
          ocrFields:
            - last_name
      auto-case-creation-enabled: ${AUTO_CASE_CREATION_ENABLED_BULKSCAN}
      auto-case-update-enabled: ${AUTO_CASE_UPDATE_ENABLED_BULKSCAN}
      case-definition-has-envelope-ids: ${CASE_DEFINITION_HAS_ENVELOPE_IDS_BULKSCAN}
      search-cases-by-envelope-id: ${CAN_SEARCH_CASES_BY_ENVELOPE_ID_BULKSCAN}

    - service: bulkscanauto # service name corresponds to the name of the container in Blob Storage
      jurisdiction: BULKSCAN
      transformation-url: ${TRANSFORMATION_URL_BULKSCAN}
      update-url: ${UPDATE_URL_BULKSCAN}
      case-type-ids:
        - Bulk_Scanned
      allow-creating-case-before-payments-are-processed: true
      allow-attaching-to-case-before-payments-are-processed-for-classifications:
        - SUPPLEMENTARY_EVIDENCE
      form-type-to-surname-ocr-field-mappings:
        - formType: PERSONAL
          ocrFields:
            - last_name
      auto-case-creation-enabled: ${AUTO_CASE_CREATION_ENABLED_BULKSCANAUTO}
      auto-case-update-enabled: ${AUTO_CASE_UPDATE_ENABLED_BULKSCANAUTO}
      case-definition-has-envelope-ids: ${CASE_DEFINITION_HAS_ENVELOPE_IDS_BULKSCANAUTO}
      search-cases-by-envelope-id: ${CAN_SEARCH_CASES_BY_ENVELOPE_ID_BULKSCANAUTO}

    - service: sscs
      jurisdiction: SSCS
      transformation-url: ${TRANSFORMATION_URL_SSCS}
      case-type-ids:
        - Benefit
      form-type-to-surname-ocr-field-mappings:
        - formType: sscs1
          ocrFields:
            - person2_last_name
            - person1_last_name
        - formType: SSCS1
          ocrFields:
            - person2_last_name
            - person1_last_name
        - formType: SSCS1PE
          ocrFields:
            - person2_last_name
            - person1_last_name
        - formType: SSCS1PEU
          ocrFields:
            - person2_last_name
            - person1_last_name
        - formType: SSCS1U
          ocrFields:
            - person2_last_name
            - person1_last_name
        - formType: SSCS2
          ocrFields:
            - person1_last_name
        - formType: SSCS5
          ocrFields:
            - person2_last_name
            - person1_last_name
        - formType: SSCS8
          ocrFields:
            - person1_last_name

      auto-case-creation-enabled: ${AUTO_CASE_CREATION_ENABLED_SSCS}
      auto-case-update-enabled: ${AUTO_CASE_UPDATE_ENABLED_SSCS}
      case-definition-has-envelope-ids: ${CASE_DEFINITION_HAS_ENVELOPE_IDS_SSCS}
      search-cases-by-envelope-id: ${CAN_SEARCH_CASES_BY_ENVELOPE_ID_SSCS}
      supplementary-data-enabled: ${SUPPLEMENTARY_DATA_ENABLED_SSCS}

    - service: probate
      jurisdiction: PROBATE
      transformation-url: ${TRANSFORMATION_URL_PROBATE}
      update-url: ${UPDATE_URL_PROBATE}
      form-type-to-surname-ocr-field-mappings:
        - formType:  PA1P
          ocrFields:
            - deceasedSurname
        - formType: PA8A
          ocrFields:
            - deceasedSurname
        - formType: PA1A
          ocrFields:
            - deceasedSurname
      case-type-ids:
        - GrantOfRepresentation
        - Caveat
        - StandingSearch
        - WillLodgement
      allow-creating-case-before-payments-are-processed: true
      auto-case-creation-enabled: ${AUTO_CASE_CREATION_ENABLED_PROBATE}
      auto-case-update-enabled: ${AUTO_CASE_UPDATE_ENABLED_PROBATE}
      case-definition-has-envelope-ids: ${CASE_DEFINITION_HAS_ENVELOPE_IDS_PROBATE}
      search-cases-by-envelope-id: ${CAN_SEARCH_CASES_BY_ENVELOPE_ID_PROBATE}

    - service: divorce
      jurisdiction: DIVORCE
      case-type-ids:
        - DIVORCE
        - DIVORCE_NOTICE_OF_ACTING
      transformation-url: ${TRANSFORMATION_URL_DIVORCE}
      allow-creating-case-before-payments-are-processed: true
      auto-case-creation-enabled: ${AUTO_CASE_CREATION_ENABLED_DIVORCE}
      auto-case-update-enabled: ${AUTO_CASE_UPDATE_ENABLED_DIVORCE}
      case-definition-has-envelope-ids: ${CASE_DEFINITION_HAS_ENVELOPE_IDS_DIVORCE}
      search-cases-by-envelope-id: ${CAN_SEARCH_CASES_BY_ENVELOPE_ID_DIVORCE}

    - service: finrem
      jurisdiction: DIVORCE
      case-type-ids:
        - FinancialRemedyMVP2
        - FinancialRemedyContested
      transformation-url: ${TRANSFORMATION_URL_FINREM}
      allow-creating-case-before-payments-are-processed: true
      auto-case-creation-enabled: ${AUTO_CASE_CREATION_ENABLED_FINREM}
      auto-case-update-enabled: ${AUTO_CASE_UPDATE_ENABLED_FINREM}
      case-definition-has-envelope-ids: ${CASE_DEFINITION_HAS_ENVELOPE_IDS_FINREM}
      search-cases-by-envelope-id: ${CAN_SEARCH_CASES_BY_ENVELOPE_ID_FINREM}

    - service: cmc
      jurisdiction: CMC
      case-type-ids:
        - MoneyClaimCase
      auto-case-creation-enabled: ${AUTO_CASE_CREATION_ENABLED_CMC}
      auto-case-update-enabled: ${AUTO_CASE_UPDATE_ENABLED_CMC}
      case-definition-has-envelope-ids: ${CASE_DEFINITION_HAS_ENVELOPE_IDS_CMC}
      search-cases-by-envelope-id: ${CAN_SEARCH_CASES_BY_ENVELOPE_ID_CMC}

    - service: publiclaw
      jurisdiction: PUBLICLAW
      case-type-ids: []
      auto-case-creation-enabled: ${AUTO_CASE_CREATION_ENABLED_PUBLICLAW}
      auto-case-update-enabled: ${AUTO_CASE_UPDATE_ENABLED_PUBLICLAW}
      case-definition-has-envelope-ids: ${CASE_DEFINITION_HAS_ENVELOPE_IDS_PUBLICLAW}
      search-cases-by-envelope-id: ${CAN_SEARCH_CASES_BY_ENVELOPE_ID_PUBLICLAW}

    - service: nfd
      jurisdiction: DIVORCE
      transformation-url: ${TRANSFORMATION_URL_NFD}
      case-type-ids:
        - NFD
      allow-creating-case-before-payments-are-processed: true
      auto-case-creation-enabled: ${AUTO_CASE_CREATION_ENABLED_NFD}
      auto-case-update-enabled: ${AUTO_CASE_UPDATE_ENABLED_NFD}
      case-definition-has-envelope-ids: ${CASE_DEFINITION_HAS_ENVELOPE_IDS_NFD}
      search-cases-by-envelope-id: ${CAN_SEARCH_CASES_BY_ENVELOPE_ID_NFD}

    - service: privatelaw
      jurisdiction: PRIVATELAW
      transformation-url: ${TRANSFORMATION_URL_PRIVATELAW}
      case-type-ids:
        - PRLAPPS
      auto-case-creation-enabled: ${AUTO_CASE_CREATION_ENABLED_PRIVATELAW}
      auto-case-update-enabled: ${AUTO_CASE_UPDATE_ENABLED_PRIVATELAW}
      case-definition-has-envelope-ids: ${CASE_DEFINITION_HAS_ENVELOPE_IDS_PRIVATELAW}
      search-cases-by-envelope-id: ${CAN_SEARCH_CASES_BY_ENVELOPE_ID_PRIVATELAW}

scheduling:
  task:
    delete-envelopes-dlq-messages:
      enabled: ${DELETE_ENVELOPES_DLQ_MESSAGES_ENABLED:false}
      cron: ${DELETE_ENVELOPES_DLQ_MESSAGES_CRON}
      ttl: ${DELETE_ENVELOPES_DLQ_MESSAGES_TTL}
    check-envelopes-queue:
      fixedDelay:  ${ENVELOPE_QUEUE_CHECK_POLL_INTERVAL}

task:
  check-jurisdiction-log-in:
    check-validity-duration: PT5M # only ensure this often that no log-in attempt is rejected by IDAM

logging:
  level:
    uk:
      gov:
        hmcts:
          reform: ${REFORM_LOG_LEVEL:debug}

callback:
  store:
    retry-count: 3

cdam:
  api:
    url: ${CDAM_URL}
    enabled: ${CDAM_ENABLED}

springdoc:
  packagesToScan: uk.gov.hmcts.reform.bulkscan.orchestrator.controllers
  pathsToMatch: /**

jms:
  # Set to disable configuration in envs besides local/dev
  enabled: ${JMS_ENABLED:false}

launchdarkly:
  sdk-key: ${LAUNCH_DARKLY_SDK_KEY:XXXXX}
  offline-mode: ${LAUNCH_DARKLY_OFFLINE_MODE:false}
