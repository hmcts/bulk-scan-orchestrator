java:
  secrets:
    SB_ACCESS_KEY:
      secretRef: servicebus-secret-namespace-{{ .Release.Name }}-servicebus
      key: primaryKey
    SB_NAMESPACE:
      secretRef: servicebus-secret-namespace-{{ .Release.Name }}-servicebus
      key: namespaceName
  environment:
    S2S_URL: "http://rpe-service-auth-provider-aat.service.core-compute-aat.internal"
    IDAM_API_URL: "https://idam-api.aat.platform.hmcts.net"
    IDAM_CLIENT_REDIRECT_URI: "https://bulk-scan-orchestrator-aat.service.core-compute-aat.internal/oauth2/callback"
    CORE_CASE_DATA_API_URL: "http://ccd-data-store-api-aat.service.core-compute-aat.internal"
    DOCUMENT_MANAGEMENT_URL: "http://dm-store-aat.service.core-compute-aat.internal"
    TRANSFORMATION_URL_BULKSCAN: "http://bulk-scan-sample-app-aat.service.core-compute-aat.internal/transform-exception-record"
    UPDATE_URL_BULKSCAN: "http://bulk-scan-sample-app-aat.service.core-compute-aat.internal/update-case"
    UPDATE_URL_PROBATE: "http://probate-back-office-aat.service.core-compute-aat.internal/update-case"
    QUEUE_ACCESS_KEY_LISTEN_NAME: "RootManageSharedAccessKey"
    QUEUE_ACCESS_KEY_SEND_NAME: "RootManageSharedAccessKey"
    QUEUE_NAMESPACE: "$(SB_NAMESPACE)"
    ENVELOPES_QUEUE_READ_ACCESS_KEY: "$(SB_ACCESS_KEY)"
    ENVELOPES_QUEUE_MAX_DELIVERY_COUNT: "10"
    PROCESSED_ENVELOPES_QUEUE_WRITE_ACCESS_KEY: "$(SB_ACCESS_KEY)"
    PAYMENTS_QUEUE_WRITE_ACCESS_KEY: "$(SB_ACCESS_KEY)"
    FLYWAY_URL: "jdbc:postgresql://{{ .Release.Name }}-postgresql:5432/{{ .Values.postgresql.postgresqlDatabase}}"
    FLYWAY_USER: "{{ .Values.postgresql.postgresqlUsername}}"
    FLYWAY_PASSWORD: "{{ .Values.postgresql.postgresqlPassword}}"
    FLYWAY_NOOP_STRATEGY: "false"
  keyVaults:
    "bulk-scan":
      secrets:
        - name: idam-client-secret
          alias: IDAM_CLIENT_SECRET
        - name: s2s-secret-bulk-scan-orchestrator
          alias: S2S_SECRET
        - name: idam-users-bulkscan-username
          alias: idam.users.bulkscan.username
        - name: idam-users-bulkscan-password
          alias: idam.users.bulkscan.password
  # Don't modify below here
  image: ${IMAGE_NAME}
  ingressHost: ${SERVICE_FQDN}

  postgresql:
    enabled: true
    postgresqlUsername: bulkscanner
    postgresqlPassword: bsppassword
    postgresqlDatabase: bs_orchestrator

servicebus:
  resourceGroup: bulk-scan-aks
  teamName: "Software Engineering"
  location: ukwest
  serviceplan: basic
  setup:
    queues:
      - name: envelopes
      - name: notifications
      - name: processed-envelopes
      - name: payments
  enabled: true

